name: CI

on:
  pull_request:
    branches: [ master ]

  workflow_dispatch:
    inputs:
      version:
        description: 'Release version to create'     
        required: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    name: Build and test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '10.0.x'
          include-prerelease: true
      - name: Install lld-link
        run: sudo apt-get install lld
      - name: Install xwin
        run: |
          wget https://github.com/Jake-Shadle/xwin/releases/download/0.6.6-rc.2/xwin-0.6.6-rc.2-x86_64-unknown-linux-musl.tar.gz
          tar -xf xwin-0.6.6-rc.2-x86_64-unknown-linux-musl.tar.gz
          mkdir -p $HOME/.local/bin
          cp xwin-0.6.6-rc.2-x86_64-unknown-linux-musl/xwin $HOME/.local/bin
      - name: Build (CI)
        if: ${{ github.event.inputs.version == '' }}
        run: |
          dotnet build -t:Pack src/PublishAotCrossXWin.nuproj
          dotnet publish -r win-x64 -c Release test/Hello.csproj
      - name: Upload test binary
        if: ${{ github.event.inputs.version == '' }}
        uses: actions/upload-artifact@v4
        with:
          name: Hello
          path: test/bin/Release/net9.0/win-x64/publish/Hello.exe
      - name: Build (CD)
        if: ${{ github.event.inputs.version != '' }}
        run: dotnet build -t:Pack src/PublishAotCrossXWin.nuproj -p:Version=${{ github.event.inputs.version }}
      - name: Archive NuGet
        if: ${{ github.event.inputs.version != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: PublishAotCrossXWin.${{ github.event.inputs.version }}.nupkg
          path: src/bin/Debug/PublishAotCrossXWin.${{ github.event.inputs.version }}.nupkg
      - name: Create tag
        if: ${{ github.event.inputs.version != '' && github.actor == 'Windows10CE' }}
        run: |
          git tag v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}

  validate:
    needs: build_and_test
    runs-on: windows-latest
    name: Try launching
    steps:
      - name: Download test binary
        uses: actions/download-artifact@v4
        with:
          name: Hello
      - name: Launch
        run: ./Hello.exe
